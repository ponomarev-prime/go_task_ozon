package main

import (
	"fmt"
	"sync"
)

func main() {
	wg := sync.WaitGroup{}

	wg.Add(5)
	for i := 0; i < 5; i++ { // Последнее значение i это 5, при котором for завершится
		go func(i int) {
			defer wg.Done() // Замыкание, wg прокидывается по указателю
			fmt.Println(i)  // Здесь i создвнная в функции, не та i которая есть в for
			// стоит отметить, что в этом коде значение i, которое используется
			// в горутинах, не то же самое, что и значение i в цикле for.
			// В горутинах i является локальной переменной, созданной в функции,
			// которая передается в горутину через замыкание. В цикле for i изменяется на каждом шаге,
			// но в горутинах используется последнее значение i, которое было передано в замыкание, то есть 5.
		}(i)
	}

	wg.Wait()
}
